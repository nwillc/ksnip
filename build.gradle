buildscript {
    repositories {
        jcenter()
        maven {
            url = 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version",
                "gradle.plugin.com.github.nwillc:vplugin:$vplugin_version",
                "org.jetbrains.dokka:dokka-gradle-plugin:$dokka_plugin_version"
    }
}

group = 'com.github.nwillc'
version = '1.1.2'


apply plugin: 'kotlin'
apply plugin: 'com.github.nwillc.vplugin'
apply plugin: 'org.jetbrains.dokka'

repositories {
    jcenter()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version",
            "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version",
            "no.tornado:tornadofx:$tornadofx_version",
            "com.fasterxml.jackson.module:jackson-module-kotlin:$jackson_version"

    testCompile "org.assertj:assertj-core:$assertj_version",
            "org.spekframework.spek2:spek-dsl-jvm:$spek2_version"

    testRuntime "org.spekframework.spek2:spek-runner-junit5:$spek2_version"
}

compileKotlin {
    kotlinOptions.jvmTarget = jvm_version
}

compileTestKotlin {
    kotlinOptions.jvmTarget = jvm_version
}

jar {
    manifest {
        attributes 'Main-Class': 'com.github.nwillc.ksnip.SnippetsApp'
    }

    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}

test {
    useJUnitPlatform {
        includeEngines 'spek2'
    }

    beforeTest { descriptor ->
        def title = (descriptor =~ /Test ([^(]+).*/)[0][1]
        logger.lifecycle("\t$title")
    }
}

task osxApp {
    dependsOn jar

    doLast {
        def dist = "${buildDir}/app/${project.name}.app"

        mkdir("$dist/Contents/MacOS")
        mkdir("$dist/Contents/Java")
        mkdir("$dist/Contents/Resources")

        ant.copy(file: "src/main/app/Info.plist", todir: "${dist}/Contents") {
            filterset {
                filter(token: 'APP_NAME', value: project.name)
                filter(token: 'VERSION', value: version)
                filter(token: 'APP_MAIN', value: 'com.github.nwillc.ksnip.SnippetsApp')
            }
        }
        ant.copy(file: "src/main/app/JavaAppLauncher", todir: "${dist}/Contents/MacOS")
        ant.copy(file: "build/libs/${project.name}-${version}.jar", todir: "${dist}/Contents/Java")
        ant.copy(file: "src/main/app/application.icns", todir: "${dist}/Contents/Resources")
        ant.copy(todir: "${dist}/Contents/Resources/en.lproj") {
            fileset(dir: "src/main/app/en.lproj")
        }

        project.exec {
            commandLine('chmod', '+x', "$dist/Contents/MacOS/JavaAppLauncher")
        }
    }
}

dokka {
    outputFormat = 'html'
    outputDirectory = "${buildDir}/javadoc"
}

